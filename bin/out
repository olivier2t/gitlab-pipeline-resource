#!/bin/bash

set -e

exec 5>&1 # make stdout available as fd 5 for the result
exec 1>&2 # redirect all output to stderr for logging

main() {
  log "\n\n--[OUT]-------------------------"
  sourcesDirectory $1
  putResource
  emitResult
}

sourcesDirectory() {
  sources_dir=$1
  log "\n--> sources directory is: $sources_dir"
  cd $sources_dir
}

putResource() {
  log -p "\n--> Triggering GitLab pipeline ..."

echo "Variables: ${source_variables}"
  variables_entries=$(echo "${source_variables}" | jq -r '. | to_entries')
echo "Variables entries: ${variables_entries}"

  cmd="curl --request POST --form token=${source_trigger_token} --form ref=${source_ref}"
  for row in $(echo "${variables_entries}" | jq -r '.[] | @base64'); do
      _jq() {
      echo ${row} | base64 -d | jq -r ${1}
      }
echo "Var key: $(_jq '.key')"
echo "Var value: $(_jq '.value')"
    cmd="${cmd} --form 'variables[$(_jq '.key')]=$(_jq '.value')'"
  done
  cmd="${cmd} ${source_base_url}/api/v4/projects/${source_project_id}/trigger/pipeline"
  
echo "Executing ${cmd}"
  response_body=$(mktemp /tmp/response_body.XXXXXX)
  log "created file for response_body at $response_body"

  eval "$cmd" > $response_body || exit $1
  cat ${response_body}

  pipeline_id=$(cat $response_body | jq -r ".id")
  pipeline_id=$(trim $pipeline_id)

  pipeline_status=$(cat $response_body | jq -r ".status")
  pipeline_status=$(trim $pipeline_status)

  pipeline_web_url=$(cat $response_body | jq -r ".web_url")
  pipeline_web_url=$(trim $pipeline_web_url)

  pipeline_created_by=$(cat $response_body | jq -r ".user.name")
  pipeline_created_by=$(trim $pipeline_created_by)

  pipeline_created_at=$(cat $response_body | jq -r ".created_at")
  pipeline_created_at=$(trim $pipeline_created_at)
}

emitResult() {
  jq  --arg pipeline_id "$pipeline_id" \
      --arg pipeline_status "$pipeline_status" \
      --arg pipeline_web_url "$pipeline_web_url" \
      --arg pipeline_created_by "$pipeline_created_by" \
      --arg pipeline_created_at "$pipeline_created_at" \
      -n '{
    "version": {
      "id": $pipeline_id
    },
    "metadata": [
      { "name": "status", "value": $pipeline_status },
      { "name": "web_url", "value": $pipeline_web_url },
      { "name": "created_by", "value": $pipeline_created_by },
      { "name": "created_at", "value": $pipeline_created_at }
    ]
  }' >&5
}

if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
  source $(dirname $0)/common
  source $(dirname $0)/curlops
  main "$@"
fi
